#!/bin/bash

[[ -n "${debug}" ]] && echo ./bash_funcs

function delete-path-elements
{
    delete-path "$1[^:]*"
}

function delete-path
{
    PATH="$( echo "${PATH}" | \
	     sed -e "s%^${1%/}:%%" -e "s%:${1%/}:%:%g" -e "s%:${1%/}\$%%" )"
}

function append-path
{
    delete-path "${1%/}"
    PATH="${PATH}:${1%/}"
}

function prepend-path
{
    local flag
    if [[ "${PATH%%:*}" == "." ]] ; then
	flag=t
	PATH="${PATH#*:}"
    fi
    delete-path "${1%/}"
    PATH="${1%/}:${PATH}"
    if [[ "$flag" ]] ; then
	PATH=".:$PATH"
    fi
}

function start-postgres()
{
    # Use prepend here to avoid Mac OS X's versions :-P
    prepend-path /usr/local/pgsql/bin
}

function stop-postgres()
{
    delete-path /usr/local/pgsql/bin
}

function start-ztrans()
{
    append-path /.../austin.ibm.com/fs/proj/p6/ztrans/bin
}

function stop-ztrans()
{
    delete-path /.../austin.ibm.com/fs/proj/p6/ztrans/bin
}

function start-epkg()
{
    append-path /gsa/ausgsa/projects/c/cjhs/labr
}

function stop-epkg()
{
    delete-path /gsa/ausgsa/projects/c/cjhs/labr
}

function stop-gsa()
{
    true
}

function start-gsa()
{
    true
}

function stop-dfs()
{
    delete-path /usr/contrib/bin
    delete-path /usr/prod/bin
}

function start-dfs()
{
    append-path /usr/contrib/bin
    append-path /usr/prod/bin
}


function stop-afs()
{
    delete-path /usr/afs/bin
    delete-path /afs/austin/local/bin
}

function start-afs()
{
    append-path /usr/afs/bin
    append-path /afs/austin/local/bin
}

function stop-v4()
{
    delete-path /gsa/ausgsa/projects/a/aix/project/ode/bin
}

function start-v4()
{
    append-path /gsa/ausgsa/projects/a/aix/project/ode/bin
    CDPATH="$( echo "${CDPATH}" | sed -e 's%:[^:]*/sb/[^:]*%%g' )"
    CDPATH="$( echo "${CDPATH}" | sed -e 's%:[^:]*/clone/[^:]*%%g' )"
    CDPATH="${CDPATH}:${SOURCEBASE}"
}

function start-rp2()
{
    append-path /gsa/ausgsa/projects/a/aix_tools/bin
}

function stop-rp2()
{
    delete-path /gsa/ausgsa/projects/a/aix_tools/bin
}

function stop-cmvc()
{
    unset CMVC_FAMILY
    unset CMVC_BECOME
    unset CMVC_RELEASE
    unset CMVC_TOP
    unset PROD
    delete-path /usr/local/cmvc/bin
}

function start-cmvc()
{
    local cmvc_release="$CMVC_RELEASE"
    stop-cmvc
    export CMVC_RELEASE="$cmvc_release"
    if [ -z "$CMVC_RELEASE" ] ; then
	export CMVC_RELEASE=bos530
	export blob="$blob 1"
    fi
    export CMVC_TOP=$BASE
    export PROD=bos
    export CMVC_FAMILY=aix
    export CMVC_BECOME=pedzan
    append-path /usr/local/cmvc/bin
}

function stop-retain()
{
    if [[ -n "${HPATH}" ]] ; then
	delete-path "${HPATH}"
    fi

    unset CENTER
    unset HPATH
    unset LPMRDB
    unset NOTPBQS
    unset PMRDB
    unset RETAREA
    unset RETNAME
    unset RETID
    unset RETQUEUE
    unset RET_PSAR

    if alias retain >& /dev/null ; then
	unalias retain
    fi
}

function start-retain()
{
    local hpath="${HPATH:-/gsa/ausgsa/projects/s/service/usr/bin/retain}"
    stop-retain

    export CENTER=165
    export HPATH="$hpath"
    export LPMRDB=/home/pedzan/pmrs.local
    export NOTPBQS="gaudin,165 ptty,165"
    export PMRDB
    export RETAREA=1QUA
    export RETNAME="Perry Smith (pedz,165)"
    export RETID=305356
    export RETQUEUE=pedz,165
    export RET_PSAR=1
    export NQ="ptty,165"
    export SCROWNER="Perry Smith T/L 363-8630"
    export SCRTEAM="ptty,165"

    prepend-path "${HPATH}"
    alias retain='hlogin -q ${RETQUEUE} -r ${RETID}'
}

function back()
{
    /bin/pwd | sed -e "s%$( cd $BASE; /bin/pwd )%$BASE/link%"
}

function create_post_cd()
{
    # If we are on a host that has rvm, then post_cd will
    # execute rvm's cd command with "." as its argument
    if [[ $( type -t __rvm_project_rvmrc ) = "function" ]] ; then
        # create "rvm_cd" to be rvm's original cd.  We change the name
	# to _pedz_rvm_cd, we remove the call to the builtin cd, and
	# we remove all references to result (setting and returning).
	eval "$( typeset -f cd |
                 sed -ne 's%^cd ()%_pedz_rvm_cd ()%' -e '/rvm/p' -e '/[{}]/p' )"
	unset cd

	function post_cd ()
	{
	    _pedz_rvm_cd
	}

        # In this case, we also redefine popd:
	function popd ()
	{
	    builtin popd "$@"
	    local result=$?
	    if [[ "$result" -eq 0 ]] ; then
		_pedz_rvm_cd
	    fi
	    return $result
	}
    else
	function post_cd ()
	{
	    return 0
	}
    fi
}

function dcd ()
{
    local cmd="$1"
    shift
    case $# in
	0) builtin "$cmd";;
	1) builtin "$cmd" "$1";;
	2)  local where=$( echo "${PWD}" | sed -e "s%$1%$2%" );
	    echo "${where}";
	    builtin "$cmd" "${where}";;
	*) echo "Too many arguments to $cmd" 1>&2
	    return 1;;
    esac
    local result=$?
    if [[ "$result" -eq 0 ]] ; then
	post_cd
    fi
    return $result
}

function put-local-last ()
{
    delete-path /usr/local/bin
    append-path /usr/local/bin
}

function start-cq()
{
    export CQCMD_AUTHMETHOD=netrc
    export CQCMD_SCHEMA=STGC_AIX
    export CQCMD_DATABASE=AIXOS
    export CQCMD_HOST=auscqweb.austin.ibm.com

    export CONFIGURATION_MANAGER=cq
    export CMVC_FAMILY=aix
    export CMVC_BECOME=your_cmvc_id

    append-path /gsa/ausgsa/projects/a/aixtools/bin
    append-path /opt/rational/clearcase/bin
    append-path /usr/atria/bin

    . /opt/rational/clearquest/cq_setup.sh
}

function start-rvm()
{
    if [[ -z "${rvm_path}" && -f /etc/profile.d/rvm.sh ]] ; then
	local need_alias=
	if [[ $( type -t cd ) == "alias" ]] ; then
	    need_alias=t
	    unalias cd
	fi
	source /etc/profile.d/rvm.sh
	create_post_cd
	if [[ $need_alias ]] ; then
	    alias cd='dcd cd'
	fi
	post_cd
    fi
}

# stop-rvm will likely do only a half ass job of unhooking all of
# rvm's tentacles
function stop-rvm()
{
    if [[ $( type -t __rvm_project_rvmrc ) = "function" ]] ; then
	rvm system
	local need_alias=
	if [[ $( type -t cd ) == "alias" ]] ; then
	    need_alias=t
	    unalias cd
	fi
	unset __rvm_project_rvmrc
	unset rvm
	unset rvm_path
	create_post_cd
	if [[ $need_alias ]] ; then
	    alias cd='dcd cd'
	fi
	post_cd
    fi
}
